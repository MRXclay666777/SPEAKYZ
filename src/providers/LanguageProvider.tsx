import React, { createContext, useContext, useState, useEffect } from 'react';
import { motion, AnimatePresence } from 'framer-motion';

interface Language {
  code: string;
  name: string;
  flag: string;
  nativeName: string;
}

interface Translations {
  [key: string]: {
    [key: string]: string;
  };
}

interface LanguageContextType {
  currentLanguage: Language;
  availableLanguages: Language[];
  t: (key: string) => string;
  changeLanguage: (languageCode: string) => void;
  isChanging: boolean;
}

const LanguageContext = createContext<LanguageContextType | undefined>(undefined);

export const useLanguage = () => {
  const context = useContext(LanguageContext);
  if (context === undefined) {
    throw new Error('useLanguage must be used within a LanguageProvider');
  }
  return context;
};

const availableLanguages: Language[] = [
  { code: 'en', name: 'English', flag: 'üá∫üá∏', nativeName: 'English' },
  { code: 'ru', name: 'Russian', flag: 'üá∑üá∫', nativeName: '–†—É—Å—Å–∫–∏–π' },
  { code: 'es', name: 'Spanish', flag: 'üá™üá∏', nativeName: 'Espa√±ol' },
  { code: 'fr', name: 'French', flag: 'üá´üá∑', nativeName: 'Fran√ßais' },
  { code: 'de', name: 'German', flag: 'üá©üá™', nativeName: 'Deutsch' },
  { code: 'it', name: 'Italian', flag: 'üáÆüáπ', nativeName: 'Italiano' },
  { code: 'pt', name: 'Portuguese', flag: 'üáµüáπ', nativeName: 'Portugu√™s' },
  { code: 'zh', name: 'Chinese', flag: 'üá®üá≥', nativeName: '‰∏≠Êñá' },
  { code: 'ja', name: 'Japanese', flag: 'üáØüáµ', nativeName: 'Êó•Êú¨Ë™û' },
  { code: 'ko', name: 'Korean', flag: 'üá∞üá∑', nativeName: 'ÌïúÍµ≠Ïñ¥' },
];

const translations: Translations = {
  en: {
    // Navigation
    'nav.home': 'Home',
    'nav.courses': 'Courses',
    'nav.teachers': 'Teachers',
    'nav.schedule': 'Schedule',
    'nav.contact': 'Contact',
    'nav.about': 'About',
    
    // Hero Section
    'hero.title': 'Level Up Your English with Speakyz',
    'hero.subtitle': 'Transform your English skills with our innovative learning platform. Join thousands of students worldwide who have achieved fluency with our expert teachers and cutting-edge methods.',
    'hero.cta.primary': 'Start Learning Now',
    'hero.cta.secondary': 'Book Free Trial',
    'hero.stats.students': 'Happy Students',
    'hero.stats.teachers': 'Expert Teachers',
    'hero.stats.countries': 'Countries',
    'hero.stats.lessons': 'Lessons Completed',
    
    // Features
    'features.title': 'Why Choose Speakyz?',
    'features.subtitle': 'Discover the features that make our platform the best choice for learning English',
    'features.interactive.title': 'Interactive Learning',
    'features.interactive.desc': 'Engage with dynamic content, games, and real-time exercises',
    'features.native.title': 'Native Teachers',
    'features.native.desc': 'Learn from certified native English speakers with years of experience',
    'features.flexible.title': 'Flexible Schedule',
    'features.flexible.desc': 'Study at your own pace with classes available 24/7',
    'features.progress.title': 'Progress Tracking',
    'features.progress.desc': 'Monitor your improvement with detailed analytics and reports',
    'features.community.title': 'Global Community',
    'features.community.desc': 'Connect with students worldwide and practice together',
    'features.certification.title': 'Certification',
    'features.certification.desc': 'Earn recognized certificates upon course completion',
    
    // Common
    'common.loading': 'Loading...',
    'common.error': 'Something went wrong',
    'common.retry': 'Try Again',
    'common.save': 'Save',
    'common.cancel': 'Cancel',
    'common.submit': 'Submit',
    'common.close': 'Close',
    'common.next': 'Next',
    'common.previous': 'Previous',
    'common.continue': 'Continue',
    'common.get_started': 'Get Started',
    'common.learn_more': 'Learn More',
    'common.view_all': 'View All',
    'common.read_more': 'Read More',
    'common.show_less': 'Show Less',
  },
  ru: {
    // Navigation
    'nav.home': '–ì–ª–∞–≤–Ω–∞—è',
    'nav.courses': '–ö—É—Ä—Å—ã',
    'nav.teachers': '–ü—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–∏',
    'nav.schedule': '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ',
    'nav.contact': '–ö–æ–Ω—Ç–∞–∫—Ç—ã',
    'nav.about': '–û –Ω–∞—Å',
    
    // Hero Section
    'hero.title': '–ü—Ä–æ–∫–∞—á–∞–π —Å–≤–æ–π –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Å Speakyz',
    'hero.subtitle': '–¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä—É–π —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —Å –Ω–∞—à–µ–π –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–æ–π –æ–±—É—á–µ–Ω–∏—è. –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ —Ç—ã—Å—è—á–∞–º —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É, –∫–æ—Ç–æ—Ä—ã–µ –¥–æ—Å—Ç–∏–≥–ª–∏ –±–µ–≥–ª–æ—Å—Ç–∏ —Å –Ω–∞—à–∏–º–∏ —ç–∫—Å–ø–µ—Ä—Ç–Ω—ã–º–∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º–∏ –∏ –ø–µ—Ä–µ–¥–æ–≤—ã–º–∏ –º–µ—Ç–æ–¥–∞–º–∏.',
    'hero.cta.primary': '–ù–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ',
    'hero.cta.secondary': '–ó–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–Ω—ã–π —É—Ä–æ–∫',
    'hero.stats.students': '–î–æ–≤–æ–ª—å–Ω—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤',
    'hero.stats.teachers': '–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã—Ö –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª–µ–π',
    'hero.stats.countries': '–°—Ç—Ä–∞–Ω',
    'hero.stats.lessons': '–ü—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö —É—Ä–æ–∫–æ–≤',
    
    // Features
    'features.title': '–ü–æ—á–µ–º—É –≤—ã–±—Ä–∞—Ç—å Speakyz?',
    'features.subtitle': '–û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –¥–µ–ª–∞—é—Ç –Ω–∞—à—É –ø–ª–∞—Ç—Ñ–æ—Ä–º—É –ª—É—á—à–∏–º –≤—ã–±–æ—Ä–æ–º –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ',
    'features.interactive.title': '–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ',
    'features.interactive.desc': '–í–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–π—Ç–µ —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º, –∏–≥—Ä–∞–º–∏ –∏ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏',
    'features.native.title': '–ù–æ—Å–∏—Ç–µ–ª–∏ —è–∑—ã–∫–∞',
    'features.native.desc': '–£—á–∏—Ç–µ—Å—å —É —Å–µ—Ä—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–æ—Å–∏—Ç–µ–ª–µ–π –∞–Ω–≥–ª–∏–π—Å–∫–æ–≥–æ —è–∑—ã–∫–∞ —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º',
    'features.flexible.title': '–ì–∏–±–∫–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ',
    'features.flexible.desc': '–£—á–∏—Ç–µ—Å—å –≤ —Å–≤–æ–µ–º —Ç–µ–º–ø–µ —Å –∑–∞–Ω—è—Ç–∏—è–º–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–º–∏ 24/7',
    'features.progress.title': '–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞',
    'features.progress.desc': '–°–ª–µ–¥–∏—Ç–µ –∑–∞ —Å–≤–æ–∏–º —É–ª—É—á—à–µ–Ω–∏–µ–º —Å –ø–æ–º–æ—â—å—é –ø–æ–¥—Ä–æ–±–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –æ—Ç—á–µ—Ç–æ–≤',
    'features.community.title': '–ì–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–æ',
    'features.community.desc': '–û–±—â–∞–π—Ç–µ—Å—å —Å–æ —Å—Ç—É–¥–µ–Ω—Ç–∞–º–∏ –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É –∏ –ø—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ—Å—å –≤–º–µ—Å—Ç–µ',
    'features.certification.title': '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è',
    'features.certification.desc': '–ü–æ–ª—É—á–∞–π—Ç–µ –ø—Ä–∏–∑–Ω–∞–Ω–Ω—ã–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –ø–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∫—É—Ä—Å–∞',
    
    // Common
    'common.loading': '–ó–∞–≥—Ä—É–∑–∫–∞...',
    'common.error': '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫',
    'common.retry': '–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞',
    'common.save': '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å',
    'common.cancel': '–û—Ç–º–µ–Ω–∞',
    'common.submit': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å',
    'common.close': '–ó–∞–∫—Ä—ã—Ç—å',
    'common.next': '–î–∞–ª–µ–µ',
    'common.previous': '–ù–∞–∑–∞–¥',
    'common.continue': '–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å',
    'common.get_started': '–ù–∞—á–∞—Ç—å',
    'common.learn_more': '–£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ',
    'common.view_all': '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ',
    'common.read_more': '–ß–∏—Ç–∞—Ç—å –¥–∞–ª–µ–µ',
    'common.show_less': '–°–∫—Ä—ã—Ç—å',
  },
  // Add more languages as needed...
};

interface LanguageProviderProps {
  children: React.ReactNode;
}

const LanguageProvider: React.FC<LanguageProviderProps> = ({ children }) => {
  const [currentLanguage, setCurrentLanguage] = useState<Language>(availableLanguages[0]);
  const [isChanging, setIsChanging] = useState(false);

  useEffect(() => {
    // Get saved language or detect browser language
    const savedLanguage = localStorage.getItem('speakyz-language');
    const browserLanguage = navigator.language.split('-')[0];
    
    const targetLanguage = savedLanguage || browserLanguage;
    const foundLanguage = availableLanguages.find(lang => lang.code === targetLanguage);
    
    if (foundLanguage && foundLanguage !== currentLanguage) {
      setCurrentLanguage(foundLanguage);
    }
  }, []);

  const t = (key: string): string => {
    const currentTranslations = translations[currentLanguage.code] || translations.en;
    return currentTranslations[key] || key;
  };

  const changeLanguage = async (languageCode: string) => {
    const newLanguage = availableLanguages.find(lang => lang.code === languageCode);
    if (!newLanguage || newLanguage === currentLanguage) return;

    setIsChanging(true);
    
    // Simulate loading time for smooth transition
    await new Promise(resolve => setTimeout(resolve, 200));
    
    setCurrentLanguage(newLanguage);
    localStorage.setItem('speakyz-language', languageCode);
    
    setTimeout(() => setIsChanging(false), 300);
  };

  const value: LanguageContextType = {
    currentLanguage,
    availableLanguages,
    t,
    changeLanguage,
    isChanging,
  };

  return (
    <LanguageContext.Provider value={value}>
      <AnimatePresence mode="wait">
        {isChanging ? (
          <motion.div
            key="changing"
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            className="fixed inset-0 z-50 flex items-center justify-center bg-black/20 backdrop-blur-sm"
          >
            <motion.div
              initial={{ scale: 0.8, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              className="bg-white dark:bg-gray-800 rounded-2xl p-8 shadow-2xl"
            >
              <div className="flex items-center space-x-3">
                <div className="animate-spin w-6 h-6 border-2 border-primary-500 border-t-transparent rounded-full"></div>
                <span className="text-lg font-medium">
                  Switching to {currentLanguage.name}...
                </span>
              </div>
            </motion.div>
          </motion.div>
        ) : (
          <motion.div
            key={currentLanguage.code}
            initial={{ opacity: 0, y: 10 }}
            animate={{ opacity: 1, y: 0 }}
            exit={{ opacity: 0, y: -10 }}
            transition={{ duration: 0.2 }}
          >
            {children}
          </motion.div>
        )}
      </AnimatePresence>
    </LanguageContext.Provider>
  );
};

export default LanguageProvider;